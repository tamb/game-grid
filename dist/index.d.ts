import { IState, IOptions, ICell, IRefs, IConfig, IGameGrid } from './interfaces';
export default class GameGrid implements IGameGrid {
    options: IOptions;
    private matrix;
    private state;
    refs: IRefs;
    constructor(config: IConfig, container?: HTMLElement | null);
    renderGrid(container: HTMLElement): void;
    getOptions(): IOptions;
    setOptions(newOptions: IOptions): void;
    destroy(): void;
    getState(): IState;
    moveLeft(): void;
    moveUp(): void;
    moveRight(): void;
    moveDown(): void;
    setMatrix(m: ICell[][]): void;
    getMatrix(): ICell[][];
    setStateSync(obj: any): void;
    getActiveCell(): HTMLDivElement;
    private render;
    private setFocusToCell;
    private removeActiveClasses;
    private addToMoves;
    private testLimit;
    private testInteractive;
    private testBarrier;
    private testSpace;
    private finishMove;
    private handleDirection;
    private handleKeyDown;
    private handleCellClick;
    private containerFocus;
    private containerBlur;
    private attachHandlers;
    private attachEventListeners;
    private dettachHandlers;
}
export declare const gameGridEventsEnum: {
    RENDERED: string;
    CREATED: string;
    DESTROYED: string;
    MOVE_LEFT: string;
    MOVE_RIGHT: string;
    MOVE_UP: string;
    MOVE_DOWN: string;
    MOVE_BLOCKED: string;
    MOVE_COLLISION: string;
    MOVE_DETTACH: string;
    MOVE_LAND: string;
    LIMIT: string;
    LIMIT_X: string;
    LIMIT_Y: string;
    WRAP: string;
    WRAP_X: string;
    WRAP_Y: string;
};
